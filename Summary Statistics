-- The query below pulls descriptive statistics from the 'film' table
-- Uses COUNT, MIN, MAX, AVG, and MODE functions
-- A single inner join was used to connect the 'language_id' to 'language'

SELECT	
	COUNT(film_id) AS total_films,
	MIN(release_year) AS min_release_year,
	MAX(release_year) AS max_release_year,
	ROUND(AVG(release_year)) AS avg_release_year,
	MIN(rental_duration) AS min_rental_duration,
	MAX(rental_duration) AS max_rental_duration,
	ROUND(AVG(rental_duration)) AS avg_rental_duration,
	MIN(rental_rate) AS min_rental_rate,
	MAX(rental_rate) AS max_rental_rate,
	ROUND(AVG(rental_rate),2) AS avg_rental_rate,
	MIN(length) AS min_length,
	MAX(length) AS max_length,
	ROUND(AVG(length)) AS avg_length,
	MIN(replacement_cost) AS min_replacement_cost,
	MAX(replacement_cost) AS max_replacement_cost,
	ROUND(AVG(replacement_cost),2) AS avg_replacement_cost,
	MODE() WITHIN GROUP (ORDER BY B.name) AS mode_language,
	MODE() WITHIN GROUP (ORDER BY A.rating) AS mode_rating,
	MODE() WITHIN GROUP (ORDER BY A.special_features) AS mode_special_features
FROM film A	
JOIN language B ON A.language_id = B.language_id;	

-- The query below pulls the descriptive statistics from multiple tables in the database
-- Uses COUNT, DISTINCT, and CASE statements
-- Multiple inner joins used

SELECT		
	COUNT(DISTINCT CASE WHEN D.active = '1' THEN D.customer_id END)
		AS active_customers,
	COUNT(DISTINCT(G.country_id)) AS total_countries,
	ROUND(SUM(A.amount)) AS total_revenue,
	COUNT(DISTINCT(C.store_id)) AS total_stores
FROM payment A
JOIN staff B ON A.staff_id = B.staff_id
JOIN store C ON B.store_id = C.store_id
JOIN customer D ON A.customer_id = D.customer_id
JOIN address E ON D.address_id = E.address_id
JOIN city F ON E.city_id = F.city_id
JOIN country G ON F.country_id = G.country_id;
